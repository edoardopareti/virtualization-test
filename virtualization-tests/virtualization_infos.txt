HOST: 
TESTED ON UBUNTU 22.04 LTS
The following was tested using an AMD Ryzen 1500X CPU for the host system.
The host system also mounts a NVIDIA GTX1060 3GB

CHECK IF HARDWARE ASSISTED VIRTUALIZATION IS ENABLED
egrep -c '(vmx|svm)' /proc/cpuinfo
CHECK IF KVM KERNEL MODULE IS READY
sudo apt install cpu-checker -y
kvm-ok
INSTALL REQUIRED DEPENDANCIES:
QEMU IS THE EMULATOR USING THE KVM ACCELERATOR, LIBVIRT ARE THE BACKEND APIs, AND VIRT-MANAGER THE GRAPHICAL TOOL TO MANAGE VMs
sudo apt install qemu-kvm libvirt-daemon-system virt-manager -y
CHECK IF APIS ARE RUNNING
sudo systemctl status libvirtd
START VIRT-MANAGER
virt-manager

GUEST:

LINUX (x86):
The process of creating a Linux-based guest should not require to access advanced options, at least with an Ubuntu22.04 LTS distribution
(everything should work with the 5 configuration default steps
(choose the installation method, choose the ISO, set up RAM and CPU, setup VM storage, set the VM name) from the GUI).

WINDOWS 11
From virt-manager (The KVM/QEMU GUI):
In preferences: Enable XML editing
Follow the 5 configuration steps (common for Linux install too), but before starting the VM enter the VM Details (Enable "Customize configuration before install") where you can set the following:
Overview - Chipset (Virtualized MOBO chipset) : Q35 (more modern virtualized mobo chipset)
Overview - Firmware: UEFI (UEFI is required for booting Windows 11)
CPU Configuration: 
IF YOU WANT TO EMULATE THE CPU
Disable "Copy host CPU configuration (host-passthrough)" 
(On some CPUs and OS like Windows, host-passthrough will result in an error at boot, so mimicking the host's CPU configuration 
(model/family, features like the ISA, clock speed, cores and threads, cache size, security features, and capabilities 
like hardware-assisted virtualization support for the CPU and I/O operations) as closely as possible !) my yield an error. 
So you can instead select a suitable CPU model - EPYC (for AMD cpus).
BUT YOU CAN ALSO PASSTHROUGH THE CPU (RECOMMENDED) ON WINDOWS 11 WHILE AVOIDING THE WINDOWS BOOT ERROR ABOVE:
Enable "Copy host CPU configuration (host-passthrough)"
sudo -i
echo "options kvm ignore_msrs=1" > /etc/modprobe.d/kvm.conf
This allows GPU passthrough to Windows hosts when using an AMD processor!
Then select "Manually Set CPU Topology", mimicking cores and threads of your CPU (socket will be probably 1 if you have a single processor)
Download VirtIO (.iso) paradrivers 
(set of drivers designed for virtual machines to improve I/O performance by leveraging paravirtualization techniques 
-  Paravirtualization involves modifying the guest operating system to work more efficiently with the virtualization platform,
making it aware that it is running in a virtualized environment. 
This awareness allows the guest OS to communicate more efficiently with the virtualization platform.)
The download can be performed from https://fedorapeople.org/groups/virt/virtio-win/direct-downloads/archive-virtio/?C=M;O=D
Add new device to the VM:
Add hardware - Storage - Select or create custom storage - Device type: CDROM - Manage.. - Select the downloaded VirtIO.iso - This now is SATA CDROM2
Remove the Tablet device
Display : Select the Type "Spice Server" for better performance or VNC if you access remotely to the host to use the VMs, Listen Type: None, Enable OpenGL
Video: Select the "VirtIO" model , Enable 3D acceleration
TPM: Advanced options: select Model TIS and Version 2.0
Now you have SATA Disk1, SATA CDROM1, SATA CDROM2. For SATA Disk 1 (the Vm storage disk) in Advanced options set Cache mode to none and Discard Mode to unmap.
Boot Options: Put SATA CDROM1 (the disk with the operating system) before VirtIO Disk 1 (the storage disk) for first booting. Then after the OS is installed you'll be able to boot from SATA Disk 1 (you can again change the boot order putting SATA Disk 1 as the first boot option). Just notice that in Windows 11 a first step will create the required partitions and a second reboot will ask you to install Windows on the primary partition.
At install Win11 requires network connection. To Bypass it, SHIFT(+FN)+F10 and type OOBE\BYPASSNRO. Then another rebooot will be performed but with the option of skipping the first network connection.
To skip Microsoft Account access, log in with a@a.com with a random password.
VirtualMachine - Redirect USB Device allow connection of USB devices to the Guest OS

Networking configuration:
Default option for newly created VM is NAT. You can change the device model to virtio (after you installed the VirtIO driver inside the host machine)
for better performance.
All guest VM connected in the same NAT network can communicate (Windows VMs must have the Firewall disabled..)
You can also connect your VM to a bridge network:
set the NIC as follows:
Network source : Bridge device
Device name: virbr0
Device model: virtio

When you're inside the Windows VM, go to the explore resources and then to the VirtIO.iso disk.
You can install the VirtIO drivers via the .msi installer file.
Then, reboot the system, go to display options and now you can select a different screen resolution.

SNAPSHOTS:
Guest OS Snapshots can be created from virtual-manager, 
via the Manage VM Snapshots icon. OS USING UEFI AS FIRMWARE (LIKE WINDOWS) MUST NOT BE RUNNING.
In the lower left you can add snapshots, and you can select them.
Then when you run the VM you'll run from that snapshot state.

GPU PASSTHROUGH:
Current hardware configuration:
CPU with an integrated graphic card (to be assigned to the host) --> AMD Ryzen 5 5600G
A dedicated GPU (to be assigned to the guest OS) --> Nvidia GeForce GTX 1060 3GB
MOBO: ASUS PRIME B350M-K

First operations:
First I needed to update the motherboard BIOS from v6002 to 6042 (to make it compatible with the CPU)
For ASUS mobos, just download from asus.com and then copy in a formatted USB pendrive the .CAP file for v6042 (new bios/firmware) in your pendrive.
Then, put it in the USB ports in the back of the PC, reboot the system and enter the BIOS. There, for this mobo
model at least, go to Advamced Options, Tools and search for the BIOS Update section, select your drive and .CAP file and confirm 
the BIOS update.
At the end of the process I was greeted with a missing keyboard error, but substituting my wireless keyboard with a 
wired one allowed me to procede to the new BIOS and then to the OS.
Remember to re-activate the CPU virtualization from the BIOS after the mobo firmware update (For AMD CPU, Enable SVM from Advanced options)
Repeating the network connection was required.

